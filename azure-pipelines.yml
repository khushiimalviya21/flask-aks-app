trigger:
- main

variables:
  imageName: 'khushiacr321.azurecr.io/flask-aks-app'

stages:
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
  - job: BuildAndPush
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'

    - checkout: self

    # Login to ACR
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: 'KhushiACRConnection'

    # Build and push for linux/amd64
    - script: |
        docker buildx create --use --name mybuilder || true
        docker buildx build \
          --platform linux/amd64 \
          -t $(imageName):$(Build.BuildId) \
          --push .
      displayName: Build and Push Docker Image (linux/amd64)
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled

- stage: Deploy
  displayName: Deploy to AKS
  jobs:
  - job: DeployToAKS
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: FileTransform@1
      displayName: Replace image tag in deployment.yaml
      inputs:
        folderPath: 'manifests'
        fileType: 'yaml'
        targetFiles: 'deployment.yaml'
        substitutionType: 'token'

    - task: Kubernetes@1
      displayName: Deploy Deployment.yaml
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'azure-subscription-connection'
        azureResourceGroup: 'flask-rg'
        kubernetesCluster: 'flask-aks'
        namespace: 'default'
        command: apply
        useConfigurationFile: true
        configuration: manifests/deployment.yaml

    - task: Kubernetes@1
      displayName: Deploy Service.yaml
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'azure-subscription-connection'
        azureResourceGroup: 'flask-rg'
        kubernetesCluster: 'flask-aks'
        namespace: 'default'
        command: apply
        useConfigurationFile: true
        configuration: manifests/service.yaml

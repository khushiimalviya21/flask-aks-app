trigger:
- main

variables:
  imageName: 'flask-aks-app'

stages:
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
  - job: BuildAndPush
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'

    - checkout: self

    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: 'KhushiACRConnection'

    - script: |
        docker build --platform linux/amd64 -t khushiacr321.azurecr.io/$(imageName):latest .
      displayName: 'Build Docker Image'

    - script: |
        docker push khushiacr321.azurecr.io/$(imageName):latest
      displayName: 'Push Docker Image'

- stage: Deploy
  displayName: Deploy to AKS
  jobs:
  - job: DeployToAKS
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Kubernetes@1
      displayName: Deploy Deployment.yaml
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'azure-subscription-connection'
        azureResourceGroup: 'flask-rg'
        kubernetesCluster: 'flask-aks'
        namespace: 'default'
        command: apply
        useConfigurationFile: true
        configuration: manifests/deployment.yaml

    - task: Kubernetes@1
      displayName: Deploy Service.yaml
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'azure-subscription-connection'
        azureResourceGroup: 'flask-rg'
        kubernetesCluster: 'flask-aks'
        namespace: 'default'
        command: apply
        useConfigurationFile: true
        configuration: manifests/service.yaml
- stage: Publish
  displayName: Publish Build Artifacts
  jobs:
    - job: PublishArtifacts
      displayName: Publish Files
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - task: CopyFiles@2
          displayName: Copy Files to Artifact Staging Directory
          inputs:
            Contents: '**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: PublishPipelineArtifact@1
          displayName: Publish Pipeline Artifact
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)'
            artifact: 'flask-artifact'
            publishLocation: 'pipeline'